<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>com.backbase.buildingblocks</groupId>
        <artifactId>service-sdk-starter-core</artifactId>
        <version>13.0.0</version>
    </parent>

    <groupId>com.backbase.products</groupId>
    <artifactId>account-mock</artifactId>
    <version>1.38.14</version>
    <packaging>war</packaging>

    <scm>
        <developerConnection>scm:git:ssh://git@stash.backbase.com:7999/acc/account-mock.git</developerConnection>
        <tag>account-mock-1.38.14</tag>
    </scm>

    <distributionManagement>
        <repository>
            <id>Backbase Artifact Builds Repository</id>
            <url>https://artifacts.backbase.com/staging</url>
        </repository>
        <snapshotRepository>
            <id>Backbase Artifact Builds Repository</id>
            <url>https://artifacts.backbase.com/backbase-development-snapshots</url>
            <uniqueVersion>false</uniqueVersion>
        </snapshotRepository>
    </distributionManagement>

    <properties>
        <arrangement-manager-api.version>1.4.7</arrangement-manager-api.version>

        <meta-maven-plugin.version>0.1.0</meta-maven-plugin.version>
        <boat-maven-plugin.version>0.14.3</boat-maven-plugin.version>

        <org.mapstruct.version>1.4.2.Final</org.mapstruct.version>

        <!-- docker images -->
        <docker.repo.url>197569887140.dkr.ecr.ca-central-1.amazonaws.com</docker.repo.url>
        <docker.repo.project>lbc</docker.repo.project>
        <jib.container.ports>8187</jib.container.ports>

        <jib-maven-plugin.version>2.7.0</jib-maven-plugin.version>

        <docker.image.repository>${project.artifactId}</docker.image.repository>
        <docker.image.name>${docker.repo.url}/${docker.repo.project}/${docker.image.repository}</docker.image.name>

        <docker.default.tag>${project.version}</docker.default.tag>

        <docker.websphere.version>19.0.0.9</docker.websphere.version>
        <docker.websphere.version.major>19</docker.websphere.version.major>
        <docker.websphere.image.tag>javaee8-java11</docker.websphere.image.tag>
        <docker.websphere.image.repository>harbor.backbase.eu/external/websphere-liberty</docker.websphere.image.repository>

        <docker.distroless.jar.tag.skip>true</docker.distroless.jar.tag.skip>
        <docker.distroless.jar.latest.skip>true</docker.distroless.jar.latest.skip>
        <checkstyle.disable.checks>false</checkstyle.disable.checks>
    </properties>

    <build>
        <defaultGoal>install</defaultGoal>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>com.backbase.oss</groupId>
                    <artifactId>meta-maven-plugin</artifactId>
                    <version>${meta-maven-plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>com.backbase.oss</groupId>
                    <artifactId>boat-maven-plugin</artifactId>
                    <version>${boat-maven-plugin.version}</version>
                </plugin>
            </plugins>
        </pluginManagement>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <fork>true</fork>
                    <parameters>true</parameters>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <id>unpack-specs</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>unpack</goal>
                        </goals>
                        <configuration>
                            <stripClassifier>true</stripClassifier>
                            <stripVersion>true</stripVersion>
                            <artifactItems>
                                <artifactItem>
                                    <groupId>com.backbase.products</groupId>
                                    <artifactId>openapi-bundle</artifactId>
                                    <version>${arrangement-manager-api.version}</version>
                                    <type>zip</type>
                                </artifactItem>
                            </artifactItems>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>com.backbase.oss</groupId>
                <artifactId>meta-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <goals>
                            <goal>meta</goal>
                        </goals>
                        <configuration>
                            <meta>
                                <images>
                                    <image>
                                        <registry>${docker.repo.project}</registry>
                                        <image>${docker.image.repository}</image>
                                        <tag>${docker.default.tag}</tag>
                                    </image>
                                    <image>
                                        <registry>${docker.repo.project}</registry>
                                        <image>${docker.image.repository}</image>
                                        <tag>${docker.default.tag}-websphere-${docker.websphere.version.major}</tag>
                                        <suffix>websphere-${docker.websphere.version.major}</suffix>
                                    </image>
                                </images>
                            </meta>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>com.backbase.oss</groupId>
                <artifactId>boat-maven-plugin</artifactId>
                <configuration>
                    <generatorName>spring</generatorName>
                    <configurationFile>etc/spring-gen.yaml</configurationFile>
                    <strictSpec>true</strictSpec>
                    <generateApiDocumentation>false</generateApiDocumentation>
                    <generateApiTests>false</generateApiTests>
                    <generateModelDocumentation>false</generateModelDocumentation>
                    <generateModelTests>false</generateModelTests>
                    <generateSupportingFiles>false</generateSupportingFiles>
                    <modelNameSuffix>-dto</modelNameSuffix>
                    <configOptions>
                        <library>spring-boot</library>
                        <sourceFolder>.</sourceFolder>
                        <java8>true</java8>
                        <dateLibrary>java8</dateLibrary>
                        <hideGenerationTimestamp>true</hideGenerationTimestamp>
                        <interfaceOnly>true</interfaceOnly>
                        <skipDefaultInterface>false</skipDefaultInterface>
                        <useBeanValidation>true</useBeanValidation>
                        <useClassLevelBeanValidation>true</useClassLevelBeanValidation>
                        <useTags>true</useTags>

                        <unhandledException>false</unhandledException>
                        <addServletRequest>false</addServletRequest>
                        <useLombokAnnotations>true</useLombokAnnotations>
                        <openApiNullable>false</openApiNullable>
                        <useOptional>false</useOptional>
                        <useSetForUniqueItems>true</useSetForUniqueItems>
                        <useWithModifiers>true</useWithModifiers>
                    </configOptions>
                </configuration>
                <executions>
                    <execution>
                        <id>outbound-balance</id>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <phase>generate-sources</phase>
                        <configuration>
                            <inputSpec>${project.build.directory}/dependency/arrangement-manager/arrangement-integration-outbound-balance-api-v2*.yaml</inputSpec>
                            <output>${project.build.directory}/generated-sources/balance</output>

                            <apiPackage>com.backbase.mock.outbound.balance.api</apiPackage>
                            <modelPackage>com.backbase.mock.outbound.balance.model</modelPackage>
                        </configuration>
                    </execution>
                    <execution>
                        <id>outbound-details</id>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <phase>generate-sources</phase>
                        <configuration>
                            <inputSpec>${project.build.directory}/dependency/arrangement-manager/arrangement-integration-outbound-details-api-v2*.yaml</inputSpec>
                            <output>${project.build.directory}/generated-sources/details</output>

                            <apiPackage>com.backbase.mock.outbound.details.api</apiPackage>
                            <modelPackage>com.backbase.mock.outbound.details.model</modelPackage>
                        </configuration>
                    </execution>
                    <execution>
                        <id>outbound-link-account</id>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <phase>generate-sources</phase>
                        <configuration>
                            <inputSpec>${project.build.directory}/dependency/arrangement-manager/arrangement-integration-outbound-link-account-api-v2*.yaml</inputSpec>
                            <output>${project.build.directory}/generated-sources/link-account</output>

                            <apiPackage>com.backbase.mock.outbound.account.link.api</apiPackage>
                            <modelPackage>com.backbase.mock.outbound.account.link.model</modelPackage>
                        </configuration>
                    </execution>
                    <execution>
                        <id>outbound-recipient</id>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <phase>generate-sources</phase>
                        <configuration>
                            <inputSpec>${project.build.directory}/dependency/arrangement-manager/arrangement-integration-outbound-recipient-api-v2*.yaml</inputSpec>
                            <output>${project.build.directory}/generated-sources/recipient</output>

                            <apiPackage>com.backbase.mock.outbound.recipient.api</apiPackage>
                            <modelPackage>com.backbase.mock.outbound.recipient.model</modelPackage>
                        </configuration>
                    </execution>
                    <execution>
                        <id>outbound-search-accounts</id>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <phase>generate-sources</phase>
                        <configuration>
                            <inputSpec>${project.build.directory}/dependency/arrangement-manager/arrangement-integration-outbound-search-accounts-api-v1*.yaml</inputSpec>
                            <output>${project.build.directory}/generated-sources/search-accounts</output>

                            <apiPackage>com.backbase.mock.outbound.account.search.api</apiPackage>
                            <modelPackage>com.backbase.mock.outbound.account.search.model</modelPackage>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <dependencies>
        <dependency>
            <groupId>com.backbase.dbs.arrangement</groupId>
            <artifactId>arrangement-commons</artifactId>
        </dependency>
        <dependency>
            <groupId>org.mapstruct</groupId>
            <artifactId>mapstruct</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.data</groupId>
            <artifactId>spring-data-commons</artifactId>
        </dependency>
        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
        </dependency>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.mapstruct</groupId>
            <artifactId>mapstruct-processor</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>com.backbase.buildingblocks</groupId>
            <artifactId>auth-security</artifactId>
        </dependency>
        <dependency>
            <groupId>com.backbase.buildingblocks</groupId>
            <artifactId>service-sdk-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-webflux</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.vintage</groupId>
            <artifactId>junit-vintage-engine</artifactId>
        </dependency>

        <dependency>
            <groupId>io.swagger</groupId>
            <artifactId>swagger-annotations</artifactId>
        </dependency>
    </dependencies>

    <profiles>
        <profile>
            <id>docker-image-websphere</id>
            <properties>
                <docker.runtime.tomcat>provided</docker.runtime.tomcat>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>com.google.cloud.tools</groupId>
                        <artifactId>jib-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <phase>package</phase>
                                <goals>
                                    <goal>${docker.jib.goal}</goal>
                                </goals>
                                <configuration>
                                    <from>
                                        <image>${docker.websphere.image.repository}:${docker.websphere.version}-${docker.websphere.image.tag}</image>
                                    </from>
                                    <to>
                                        <image>${docker.image.name}:${docker.default.tag}-websphere-${docker.websphere.version.major}</image>
                                        <tags>
                                            <tag>${docker.default.tag}-websphere-${docker.websphere.version}</tag>
                                            <tag>latest-websphere-${docker.websphere.version}</tag>
                                            <tag>latest-websphere-${docker.websphere.version.major}</tag>
                                        </tags>
                                    </to>
                                    <extraDirectories>
                                        <paths>
                                            <path>
                                                <from>etc/websphere/root</from>
                                            </path>
                                            <path>
                                                <from>etc/websphere/conf</from>
                                                <into>/opt/ibm/wlp/usr/servers/defaultServer</into>
                                            </path>
                                        </paths>
                                        <permissions>
                                            <permission>
                                                <file>/start.sh</file>
                                                <mode>755</mode>
                                            </permission>
                                        </permissions>
                                    </extraDirectories>
                                    <container>
                                        <ports>
                                            <port>8080</port>
                                        </ports>
                                        <user>root</user>
                                        <appRoot>/opt/ibm/wlp/usr/servers/defaultServer/apps/root.war</appRoot>
                                        <entrypoint>/start.sh</entrypoint>
                                    </container>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>com.backbase.dbs.arrangement</groupId>
                <artifactId>arrangement-manager-api</artifactId>
                <version>${arrangement-manager-api.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>
</project>
