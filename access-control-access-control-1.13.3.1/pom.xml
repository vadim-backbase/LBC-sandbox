<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <artifactId>service-sdk-starter-core</artifactId>
    <groupId>com.backbase.buildingblocks</groupId>
    <version>13.2.2</version>
    <relativePath />
  </parent>

  <groupId>com.backbase.dbs.accesscontrol</groupId>
  <artifactId>access-control</artifactId>
  <version>1.13.3.1</version>
  <packaging>war</packaging>

  <scm>
    <developerConnection>scm:git:ssh://git@stash.backbase.com:7999/ac/access-control.git</developerConnection>
    <tag>access-control-1.13.3.1</tag>
  </scm>

  <properties>
    <blimp-maven-plugin.version>0.16.2</blimp-maven-plugin.version>

    <access-control-openapi-spec.version>1.0.73</access-control-openapi-spec.version>
    <access-control-client-api.version>2.9.2</access-control-client-api.version>
    <access-control-service-api.version>2.8.2</access-control-service-api.version>

    <legalentity-integration-outbound-api.version>2.1.0</legalentity-integration-outbound-api.version>
    <user-manager-service-api.version>2.3.3</user-manager-service-api.version>
    <arrangement-service-api.version>2.4.4</arrangement-service-api.version>
    <approval-service-api.version>2.5.0</approval-service-api.version>
    <contact-manager-service-api.version>2.3.0</contact-manager-service-api.version>
    <audit-client.version>3.2.21.1</audit-client.version>

    <pact.version>4.1.18</pact.version>
    <starter-pact.version>0.0.68</starter-pact.version>
    <testcontainers.version>1.16.0</testcontainers.version>
    <org.mapstruct.version>1.4.1.Final</org.mapstruct.version>
    <openapi-generator-maven-plugin.version>4.3.1</openapi-generator-maven-plugin.version>
    <wagon-maven-plugin.version>2.0.0</wagon-maven-plugin.version>
    <JUnitParams.version>1.1.1</JUnitParams.version>
    <camel.test.version>3.6.0</camel.test.version>
    <skip.integration.tests>false</skip.integration.tests>
    <sonar.coverage.jacoco.xmlReportPaths>target/site/jacoco-ut/jacoco.xml,target/site/jacoco-it/jacoco.xml
    </sonar.coverage.jacoco.xmlReportPaths>
    <sonar.sources>${project.basedir}/src/main/</sonar.sources>
    <sonar.tests>${project.basedir}/src/test/</sonar.tests>
    <run.addResources>false</run.addResources>
    <sonar.exclusions>
      **/com/backbase/presentation/accessgroup/**/*.java,
      **/com/backbase/accesscontrol/repository/impl/**/*.java,
      **/com/backbase/presentation/legalentity/rest/spec/v2/legalentities/**/*.java,
      **/com/backbase/pandp/accesscontrol/query/rest/spec/v2/accesscontrol/**/*.java,
      src/main/resources/db/**
    </sonar.exclusions>
  </properties>

  <dependencies>
    <dependency>
      <groupId>com.backbase.dbs.audit</groupId>
      <artifactId>audit-client</artifactId>
      <version>${audit-client.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.activemq</groupId>
      <artifactId>activemq-kahadb-store</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.camel</groupId>
      <artifactId>camel-test</artifactId>
      <version>${camel.test.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.springframework.security</groupId>
      <artifactId>spring-security-test</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.github.tomakehurst</groupId>
      <artifactId>wiremock</artifactId>
      <version>2.22.0</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.backbase.buildingblocks</groupId>
      <artifactId>api</artifactId>
    </dependency>
    <dependency>
      <groupId>com.backbase.buildingblocks</groupId>
      <artifactId>auth-security</artifactId>
    </dependency>
    <dependency>
      <groupId>com.backbase.buildingblocks</groupId>
      <artifactId>communication</artifactId>
    </dependency>
    <dependency>
      <groupId>com.backbase.buildingblocks</groupId>
      <artifactId>events</artifactId>
    </dependency>
    <dependency>
      <groupId>com.backbase.buildingblocks</groupId>
      <artifactId>behavior-extensions-camel</artifactId>
    </dependency>
    <dependency>
      <groupId>com.backbase.buildingblocks</groupId>
      <artifactId>building-blocks-common</artifactId>
    </dependency>
    <dependency>
      <groupId>org.hibernate</groupId>
      <artifactId>hibernate-jpamodelgen</artifactId>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>com.backbase.buildingblocks</groupId>
      <artifactId>multi-tenancy</artifactId>
    </dependency>
    <dependency>
      <groupId>com.backbase.buildingblocks</groupId>
      <artifactId>multi-tenancy-liquibase</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.liquibase</groupId>
      <artifactId>liquibase-core</artifactId>
    </dependency>
    <dependency>
      <groupId>com.backbase.buildingblocks</groupId>
      <artifactId>persistence</artifactId>
    </dependency>
    <dependency>
      <groupId>com.backbase.buildingblocks</groupId>
      <artifactId>service-sdk-starter-test</artifactId>
    </dependency>
    <dependency>
      <groupId>com.backbase.buildingblocks</groupId>
      <artifactId>service-sdk-starter-mapping</artifactId>
    </dependency>
    <dependency>
      <groupId>com.backbase.buildingblocks</groupId>
      <artifactId>validation</artifactId>
    </dependency>
    <dependency>
      <groupId>org.projectlombok</groupId>
      <artifactId>lombok</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.mapstruct</groupId>
      <artifactId>mapstruct-jdk8</artifactId>
      <!-- use mapstruct-jdk8 for Java 8 or higher -->
      <version>${org.mapstruct.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.mapstruct</groupId>
      <artifactId>mapstruct-processor</artifactId>
      <!-- For intelliJ support-->
      <version>${org.mapstruct.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.activemq</groupId>
      <artifactId>activemq-broker</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.h2database</groupId>
      <artifactId>h2</artifactId>
      <version>1.4.199</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>net.jodah</groupId>
      <artifactId>failsafe</artifactId>
      <version>1.0.3</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.vintage</groupId>
      <artifactId>junit-vintage-engine</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.testcontainers</groupId>
      <artifactId>testcontainers</artifactId>
      <version>${testcontainers.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.google.guava</groupId>
      <artifactId>guava</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.cloud</groupId>
      <artifactId>spring-cloud-stream-test-support</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>io.swagger</groupId>
      <artifactId>swagger-annotations</artifactId>
    </dependency>
    <dependency>
      <groupId>org.openapitools</groupId>
      <artifactId>jackson-databind-nullable</artifactId>
    </dependency>
    <dependency>
      <groupId>pl.pragmatists</groupId>
      <artifactId>JUnitParams</artifactId>
      <version>${JUnitParams.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
       <groupId>com.backbase.buildingblocks</groupId>
       <artifactId>starter-pact</artifactId>
       <version>${starter-pact.version}</version>
       <scope>test</scope>
     </dependency>
  </dependencies>
  <build>
    <plugins>
      <plugin>
        <groupId>com.backbase.oss</groupId>
        <artifactId>blimp-maven-plugin</artifactId>
        <version>${blimp-maven-plugin.version}</version>
        <executions>
          <execution>
            <goals>
              <goal>lint</goal>
              <goal>generate</goal>
            </goals>
        <configuration>
          <changeLogDirectory>${project.basedir}/src/main/resources/db</changeLogDirectory>
          <changeLogFile>changelog/db.changelog-persistence.xml</changeLogFile>
          <databases>
            <database>mysql</database>
            <database>mssql</database>
            <database>oracle</database>
          </databases>
          <stripComments>true</stripComments>
        </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <configuration>
          <useIncrementalCompilation>false</useIncrementalCompilation>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <executions>
          <execution>
            <id>unpack</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>com.backbase.dbs.accesscontrol</groupId>
                  <artifactId>access-control-openapi-spec</artifactId>
                  <version>${access-control-openapi-spec.version}</version>
                  <outputDirectory>${project.build.directory}</outputDirectory>
                  <classifier>api</classifier>
                  <type>zip</type>
                  <overWrite>true</overWrite>
                </artifactItem>
              </artifactItems>
              <includes>**/*.yaml, **/*.json</includes>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>wagon-maven-plugin</artifactId>
        <version>${wagon-maven-plugin.version}</version>
        <executions>
          <execution>
            <id>download-contact-manager-service-api</id>
            <goals>
              <goal>download-single</goal>
            </goals>
            <phase>generate-sources</phase>
            <configuration>
              <toFile>${project.build.directory}/downloaded-api/contact-manager-service-api.yaml</toFile>
              <serverId>Backbase Artifactory Repository</serverId>
              <url>https://artifacts.backbase.com/specs/contact-manager</url>
              <fromFile>contact-manager-service-api-v${contact-manager-service-api.version}.yaml</fromFile>
            </configuration>
          </execution>
          <execution>
            <id>download-user-manager-service-api</id>
            <goals>
              <goal>download-single</goal>
            </goals>
            <phase>generate-sources</phase>
            <configuration>
              <toFile>${project.build.directory}/downloaded-api/user-manager-service-api.yaml</toFile>
              <serverId>Backbase Artifactory Repository</serverId>
              <url>https://artifacts.backbase.com/specs/user-manager/</url>
              <fromFile> user-manager-service-api-v${user-manager-service-api.version}.yaml</fromFile>
            </configuration>
          </execution>
          <execution>
            <id>download-arrangement-manager-service-api</id>
            <goals>
              <goal>download-single</goal>
            </goals>
            <phase>generate-sources</phase>
            <configuration>
              <toFile>${project.build.directory}/downloaded-api/arrangement-service-api.yaml</toFile>
              <serverId>Backbase Artifactory Repository</serverId>
              <url>https://artifacts.backbase.com/specs/arrangement-manager/</url>
              <fromFile>arrangement-service-api-v${arrangement-service-api.version}.yaml</fromFile>
            </configuration>
          </execution>
          <execution>
            <id>download-approval-service-api</id>
            <goals>
              <goal>download-single</goal>
            </goals>
            <phase>generate-sources</phase>
            <configuration>
              <toFile>${project.build.directory}/downloaded-api/approval-service-api.yaml</toFile>
              <serverId>Backbase Artifactory Repository</serverId>
              <url>https://artifacts.backbase.com/specs/approval</url>
              <fromFile>approval-service-api-v${approval-service-api.version}.yaml</fromFile>
            </configuration>
          </execution>
          <execution>
            <id>download-legalentity-external-outbound-api</id>
            <goals>
              <goal>download-single</goal>
            </goals>
            <phase>generate-sources</phase>
            <configuration>
              <toFile>${project.build.directory}/downloaded-api/legalentity-integration-outbound-api.yaml</toFile>
              <serverId>Backbase Artifactory Repository</serverId>
              <url>https://artifacts.backbase.com/specs/access-control</url>
              <fromFile>legalentity-integration-outbound-api-v${legalentity-integration-outbound-api.version}.yaml</fromFile>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.openapitools</groupId>
        <artifactId>openapi-generator-maven-plugin</artifactId>
        <version>${openapi-generator-maven-plugin.version}</version>
        <executions>
          <execution>
            <id>generate-ac-client-api-code</id>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <output>${project.build.directory}/generated-sources/</output>
              <generateSupportingFiles>true</generateSupportingFiles>
              <generatorName>spring</generatorName>
              <strictSpec>true</strictSpec>
              <generateApiTests>false</generateApiTests>
              <generateModelTests>false</generateModelTests>
              <inputSpec>${project.build.directory}/access-control/access-control-client-api-v${access-control-client-api.version}.yaml</inputSpec>
              <configOptions>
                <library>spring-mvc</library>
                <dateLibrary>legacy</dateLibrary>
                <interfaceOnly>true</interfaceOnly>
                <skipDefaultInterface>true</skipDefaultInterface>
                <useBeanValidation>true</useBeanValidation>
                <useClassLevelBeanValidation>true</useClassLevelBeanValidation>
                <useTags>true</useTags>
                <java8>true</java8>
                <useOptional>false</useOptional>
                <apiPackage>com.backbase.accesscontrol.client.rest.spec.api</apiPackage>
                <modelPackage>com.backbase.accesscontrol.client.rest.spec.model</modelPackage>
              </configOptions>
            </configuration>
          </execution>
          <execution>
            <id>generate-ac-service-api-code</id>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <output>${project.build.directory}/generated-sources/</output>
              <generateSupportingFiles>true</generateSupportingFiles>
              <generatorName>spring</generatorName>
              <strictSpec>true</strictSpec>
              <generateApiTests>false</generateApiTests>
              <generateModelTests>false</generateModelTests>
              <inputSpec>${project.build.directory}/access-control/access-control-service-api-v${access-control-service-api.version}.yaml</inputSpec>
              <configOptions>
                <library>spring-mvc</library>
                <dateLibrary>legacy</dateLibrary>
                <interfaceOnly>true</interfaceOnly>
                <skipDefaultInterface>true</skipDefaultInterface>
                <useBeanValidation>true</useBeanValidation>
                <useClassLevelBeanValidation>true</useClassLevelBeanValidation>
                <useTags>true</useTags>
                <java8>true</java8>
                <useOptional>false</useOptional>
                <apiPackage>com.backbase.accesscontrol.service.rest.spec.api</apiPackage>
                <modelPackage>com.backbase.accesscontrol.service.rest.spec.model</modelPackage>
              </configOptions>
            </configuration>
          </execution>
          <execution>
            <id>generate-user-manager-service-api-client</id>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <output>${project.build.directory}/generated-sources/</output>
              <generateSupportingFiles>true</generateSupportingFiles>
              <generatorName>java</generatorName>
              <strictSpec>true</strictSpec>
              <generateApiTests>false</generateApiTests>
              <generateModelTests>false</generateModelTests>
              <inputSpec>
                ${project.build.directory}/downloaded-api/user-manager-service-api.yaml
              </inputSpec>
              <configOptions>
                <library>resttemplate</library>
                <dateLibrary>legacy</dateLibrary>
                <interfaceOnly>true</interfaceOnly>
                <skipDefaultInterface>true</skipDefaultInterface>
                <useBeanValidation>true</useBeanValidation>
                <useClassLevelBeanValidation>false</useClassLevelBeanValidation>
                <useTags>true</useTags>
                <java8>true</java8>
                <useOptional>false</useOptional>
                <apiPackage>com.backbase.dbs.user.api.client.v2</apiPackage>
                <modelPackage>com.backbase.dbs.user.api.client.v2.model</modelPackage>
              </configOptions>
            </configuration>
          </execution>
          <execution>
            <id>generate-contact-service-api-client</id>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <output>${project.build.directory}/generated-sources/</output>
              <generateSupportingFiles>true</generateSupportingFiles>
              <generatorName>java</generatorName>
              <strictSpec>true</strictSpec>
              <generateApiTests>false</generateApiTests>
              <generateModelTests>false</generateModelTests>
              <inputSpec>${project.build.directory}/downloaded-api/contact-manager-service-api.yaml</inputSpec>
              <configOptions>
                <library>resttemplate</library>
                <dateLibrary>legacy</dateLibrary>
                <interfaceOnly>true</interfaceOnly>
                <skipDefaultInterface>true</skipDefaultInterface>
                <useBeanValidation>true</useBeanValidation>
                <useClassLevelBeanValidation>false</useClassLevelBeanValidation>
                <useTags>true</useTags>
                <java8>true</java8>
                <useOptional>false</useOptional>
                <apiPackage>com.backbase.dbs.contact.api.client.v2</apiPackage>
                <modelPackage>com.backbase.dbs.contact.api.client.v2.model</modelPackage>
              </configOptions>
            </configuration>
          </execution>
          <execution>
            <id>generate-approval-service-api-client</id>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <output>${project.build.directory}/generated-sources/</output>
              <generateSupportingFiles>true</generateSupportingFiles>
              <generatorName>java</generatorName>
              <strictSpec>true</strictSpec>
              <generateApiTests>false</generateApiTests>
              <generateModelTests>false</generateModelTests>
              <inputSpec>${project.build.directory}/downloaded-api/approval-service-api.yaml</inputSpec>
              <configOptions>
                <library>resttemplate</library>
                <dateLibrary>legacy</dateLibrary>
                <interfaceOnly>true</interfaceOnly>
                <skipDefaultInterface>true</skipDefaultInterface>
                <useBeanValidation>true</useBeanValidation>
                <useClassLevelBeanValidation>false</useClassLevelBeanValidation>
                <useTags>true</useTags>
                <java8>true</java8>
                <useOptional>false</useOptional>
                <apiPackage>com.backbase.dbs.approval.api.client.v2</apiPackage>
                <modelPackage>com.backbase.dbs.approval.api.client.v2.model</modelPackage>
              </configOptions>
            </configuration>
          </execution>
          <execution>
            <id>generate-arrangement-service-api-client</id>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <output>${project.build.directory}/generated-sources/</output>
              <generateSupportingFiles>true</generateSupportingFiles>
              <generatorName>java</generatorName>
              <strictSpec>true</strictSpec>
              <generateApiTests>false</generateApiTests>
              <generateModelTests>false</generateModelTests>
              <inputSpec>${project.build.directory}/downloaded-api/arrangement-service-api.yaml</inputSpec>
              <configOptions>
                <library>resttemplate</library>
                <dateLibrary>legacy</dateLibrary>
                <interfaceOnly>true</interfaceOnly>
                <skipDefaultInterface>true</skipDefaultInterface>
                <useBeanValidation>true</useBeanValidation>
                <useClassLevelBeanValidation>false</useClassLevelBeanValidation>
                <useTags>true</useTags>
                <java8>true</java8>
                <useOptional>false</useOptional>
                <apiPackage>com.backbase.dbs.arrangement.api.client.v2</apiPackage>
                <modelPackage>com.backbase.dbs.arrangement.api.client.v2.model</modelPackage>
              </configOptions>
            </configuration>
          </execution>
          <execution>
            <id>generate-legalentity-integration-outbound-client</id>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <output>${project.build.directory}/generated-sources/</output>
              <generateSupportingFiles>true</generateSupportingFiles>
              <generatorName>java</generatorName>
              <strictSpec>true</strictSpec>
              <generateApiTests>false</generateApiTests>
              <generateModelTests>false</generateModelTests>
              <inputSpec>${project.build.directory}/downloaded-api/legalentity-integration-outbound-api.yaml</inputSpec>
              <configOptions>
                <library>resttemplate</library>
                <dateLibrary>legacy</dateLibrary>
                <interfaceOnly>true</interfaceOnly>
                <skipDefaultInterface>true</skipDefaultInterface>
                <useBeanValidation>true</useBeanValidation>
                <useClassLevelBeanValidation>false</useClassLevelBeanValidation>
                <useTags>true</useTags>
                <java8>true</java8>
                <useOptional>false</useOptional>
                <apiPackage>com.backbase.dbs.accesscontrol.api.client.v2</apiPackage>
                <modelPackage>com.backbase.dbs.accesscontrol.api.client.v2.model</modelPackage>
              </configOptions>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>com.backbase.codegen</groupId>
        <artifactId>jsonschema-events-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>accesscontrol-events-spec</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>events-generation</goal>
            </goals>
            <configuration>
              <inputFile>src/main/resources/events</inputFile>
              <outputFile>target/generated-sources/</outputFile>
              <packageName>pandp.accesscontrol</packageName>
              <packageVersion>1</packageVersion>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-assembly-plugin</artifactId>
        <executions>
          <execution>
            <id>zip-events</id>
            <phase>package</phase>
            <goals>
              <goal>single</goal>
            </goals>
            <configuration>
              <descriptors>
                <descriptor>src/assembly/events.xml</descriptor>
              </descriptors>
            </configuration>
          </execution>
          <execution>
            <id>create-archive</id>
            <phase>package</phase>
            <goals>
              <goal>single</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <descriptors>
            <descriptor>src/assembly/db-scripts.xml</descriptor>
          </descriptors>
        </configuration>
      </plugin>
    </plugins>
  </build>
  <profiles>
    <profile>
      <id>testcontainers</id>
      <activation>
        <activeByDefault>false</activeByDefault>
        <property>
          <name>!env.PIPELINE</name>
        </property>
      </activation>
      <dependencies>
        <dependency>
          <groupId>org.testcontainers</groupId>
          <artifactId>mssqlserver</artifactId>
          <version>${testcontainers.version}</version>
          <scope>test</scope>
        </dependency>
        <dependency>
          <groupId>org.testcontainers</groupId>
          <artifactId>mysql</artifactId>
          <version>${testcontainers.version}</version>
          <scope>test</scope>
        </dependency>
        <dependency>
          <groupId>org.testcontainers</groupId>
          <artifactId>oracle-xe</artifactId>
          <version>${testcontainers.version}</version>
          <scope>test</scope>
        </dependency>
        <dependency>
          <groupId>org.testcontainers</groupId>
          <artifactId>testcontainers</artifactId>
          <version>${testcontainers.version}</version>
          <scope>test</scope>
        </dependency>
        <dependency>
          <groupId>org.testcontainers</groupId>
          <artifactId>mariadb</artifactId>
          <version>${testcontainers.version}</version>
          <scope>test</scope>
        </dependency>
        <dependency>
          <groupId>org.mariadb.jdbc</groupId>
          <artifactId>mariadb-java-client</artifactId>
          <version>2.6.2</version>
          <scope>test</scope>
        </dependency>
        <dependency>
          <groupId>com.microsoft.sqlserver</groupId>
          <artifactId>mssql-jdbc</artifactId>
          <version>8.1.0.jre8-preview</version>
          <scope>test</scope>
        </dependency>
        <dependency>
          <groupId>mysql</groupId>
          <artifactId>mysql-connector-java</artifactId>
          <version>5.1.47</version>
          <scope>test</scope>
        </dependency>
        <dependency>
          <groupId>com.oracle</groupId>
          <artifactId>ojdbc6</artifactId>
          <version>11.2.0.3</version>
          <scope>test</scope>
        </dependency>
      </dependencies>
    </profile>
    <!-- docker-image-websphere -->
    <profile>
      <id>docker-image-websphere</id>
      <properties>
        <skip.integration.tests>true</skip.integration.tests>
        <skip.unit.tests>true</skip.unit.tests>
      </properties>

      <dependencies>
        <!-- additional config -->
        <dependency>
          <groupId>com.backbase.buildingblocks</groupId>
          <artifactId>auxiliary-config</artifactId>
        </dependency>

        <!-- add db drivers -->
        <dependency>
          <groupId>mysql</groupId>
          <artifactId>mysql-connector-java</artifactId>
          <scope>${docker.jdbc.mysql}</scope>
        </dependency>

        <dependency>
          <groupId>com.microsoft.sqlserver</groupId>
          <artifactId>mssql-jdbc</artifactId>
          <scope>${docker.jdbc.mssql}</scope>
        </dependency>

        <dependency>
          <groupId>com.oracle.ojdbc</groupId>
          <artifactId>ojdbc8</artifactId>
          <scope>${docker.jdbc.oracle}</scope>
        </dependency>

        <dependency>
          <groupId>org.mariadb.jdbc</groupId>
          <artifactId>mariadb-java-client</artifactId>
          <scope>${docker.jdbc.mysql}</scope>
        </dependency>

        <!-- add cloud stream binders -->
        <dependency>
          <groupId>org.springframework.cloud</groupId>
          <artifactId>spring-cloud-stream-binder-rabbit</artifactId>
          <scope>${docker.scs.rabbit}</scope>
        </dependency>

        <dependency>
          <groupId>org.springframework.cloud</groupId>
          <artifactId>spring-cloud-stream-binder-kafka</artifactId>
          <scope>${docker.scs.kafka}</scope>
        </dependency>

        <!-- add embedded tomcat -->
        <dependency>
          <groupId>org.springframework.boot</groupId>
          <artifactId>spring-boot-starter-tomcat</artifactId>
          <scope>${docker.runtime.tomcat}</scope>
        </dependency>
      </dependencies>
      <build>
        <plugins>
          <!-- generate "docker.default.tag" which typically is project.version -->
          <plugin>
            <groupId>org.codehaus.gmavenplus</groupId>
            <artifactId>gmavenplus-plugin</artifactId>
            <executions>
              <execution>
                <id>set-properties</id>
                <phase>initialize</phase>
                <goals>
                  <goal>execute</goal>
                </goals>
                <configuration>
                  <scripts>
                    <script>
                      <![CDATA[
                                        tag = "${project.version}".minus("-SNAPSHOT")

                                        project.properties.setProperty('docker.default.tag', tag)
                                        println "websphere docker.default.tag: " + project.properties['docker.default.tag']
                                    ]]>
                    </script>
                  </scripts>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <!-- build image -->
          <plugin>
            <groupId>com.google.cloud.tools</groupId>
            <artifactId>jib-maven-plugin</artifactId>
            <executions>
              <execution>
                <id>websphere-image</id>
                <phase>package</phase>
                <goals>
                  <goal>build</goal>
                </goals>
                <configuration>
                  <from>
                    <image>websphere-liberty:19.0.0.9-javaee8-java11</image>
                  </from>
                  <to>
                    <image>${docker.image.name}:${docker.default.tag}-websphere-19</image>
                    <tags>
                      <tag>${docker.default.tag}-websphere-19</tag>
                      <tag>latest-websphere-19</tag>
                    </tags>
                  </to>
                  <container>
                    <ports>
                      <port>8080</port>
                    </ports>
                    <appRoot>/opt/ibm/wlp/usr/servers/defaultServer/apps/root.war/</appRoot>
                    <entrypoint>
                      <![CDATA[sh,-c, printenv > /opt/ibm/wlp/usr/servers/defaultServer/server.env && echo 'SPRING_AUTOCONFIGURE_EXCLUDE=com.backbase.buildingblocks.eureka.ManagementMetadataProviderAutoConfiguration\n' >> /opt/ibm/wlp/usr/servers/defaultServer/server.env && echo '<?xml version="1.0" encoding="UTF-8"?><server description="defaultServer">\n<featureManager><feature>javaee-8.0</feature></featureManager><httpEndpoint host="*" httpPort="8080" httpsPort="8443" id="defaultHttpEndpoint" /><webApplication contextRoot="/" location="root.war" /></server>' > /config/server.xml && /opt/ibm/wlp/bin/installUtility install defaultServer && /opt/ibm/helpers/runtime/docker-server.sh /opt/ibm/wlp/bin/server run defaultServer]]>
                    </entrypoint>
                    <user>root</user>
                  </container>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <id>non-pact</id>
      <activation>
        <property>
          <name>!pactbroker.url</name>
        </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-surefire-plugin</artifactId>
            <configuration>
               <excludedGroups>PactProvider,PactConsumer</excludedGroups>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <id>pact</id>
      <activation>
        <property>
          <name>pactbroker.url</name>
        </property>
      </activation>
      <build>
        <plugins>
          <!-- Configure Surefire plugin for Pact based properties used with provider verification -->
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-surefire-plugin</artifactId>
            <configuration>
              <systemProperties>
                <property>
                  <!-- Provider version used when publishing pact results -->
                  <name>pact.provider.version</name>
                  <value>${project.version}${pact.commithash}</value>
                </property>
              </systemProperties>
            </configuration>
          </plugin>
          <!-- Plugin for publishing pacts to a broker -->
          <plugin>
            <groupId>au.com.dius.pact.provider</groupId>
            <artifactId>maven</artifactId>
            <version>${pact.version}</version>
            <configuration>
              <pactBrokerUrl>${pactbroker.url}</pactBrokerUrl>
              <pactBrokerToken>${pactbroker.auth.token}</pactBrokerToken>
              <projectVersion>${project.version}${pact.commithash}</projectVersion>
              <trimSnapshot>true</trimSnapshot>
            </configuration>
            <executions>
              <execution>
                <phase>verify</phase>
                <goals>
                  <goal>publish</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>
